enum ApplicationSortByInput {
  SUBMITTED_ON_DESC
  COMMENT_ASC
  LOCATION_DESC
  RECEIVED_ON_DESC
  STREAM_ASC
  ANZSCO_CODE_DESC
  DAYS_ASC
  RECEIVED_ON_ASC
  ANZSCO_CODE_ASC
  CREATED_AT_ASC
  LOCATION_ASC
  STREAM_DESC
  SUBMITTED_ON_ASC
  COMMENT_DESC
  CREATED_AT_DESC
  _ID_ASC
  _ID_DESC
  DAYS_DESC
}

input ApplicationUpdateInput {
  submitted_on_unset: Boolean
  _id: ObjectId
  days_unset: Boolean
  created_at: DateTime
  location_unset: Boolean
  days_inc: Int
  received_on: DateTime
  days: Int
  outcome: Boolean
  comment: String
  anzsco_code_unset: Boolean
  outcome_unset: Boolean
  stream: String
  location: String
  comment_unset: Boolean
  received_on_unset: Boolean
  submitted_on: DateTime
  created_at_unset: Boolean
  anzsco_code: String
  _id_unset: Boolean
  stream_unset: Boolean
}

type UpdateManyPayload {
  matchedCount: Int!
  modifiedCount: Int!
}

input ApplicationInsertInput {
  anzsco_code: String!
  outcome: Boolean!
  comment: String
  received_on: DateTime!
  stream: String!
  submitted_on: DateTime!
  location: String!
  created_at: DateTime
  _id: ObjectId
  days: Int!
}

scalar ObjectId

type Application {
  _id: ObjectId!
  anzsco_code: String!
  comment: String
  created_at: DateTime
  days: Int!
  location: String!
  outcome: Boolean!
  received_on: DateTime!
  stream: String!
  submitted_on: DateTime!
}

type Mutation {
  deleteManyApplications(query: ApplicationQueryInput): DeleteManyPayload
  deleteOneApplication(query: ApplicationQueryInput!): Application
  insertManyApplications(data: [ApplicationInsertInput!]!): InsertManyPayload
  insertOneApplication(data: ApplicationInsertInput!): Application
  replaceOneApplication(query: ApplicationQueryInput, data: ApplicationInsertInput!): Application
  updateManyApplications(query: ApplicationQueryInput, set: ApplicationUpdateInput!): UpdateManyPayload
  updateOneApplication(query: ApplicationQueryInput, set: ApplicationUpdateInput!): Application
  upsertOneApplication(query: ApplicationQueryInput, data: ApplicationInsertInput!): Application
}

input ApplicationQueryInput {
  location_gte: String
  anzsco_code_lt: String
  _id: ObjectId
  submitted_on_ne: DateTime
  submitted_on_exists: Boolean
  days_in: [Int]
  comment_in: [String]
  _id_in: [ObjectId]
  location_lte: String
  created_at_nin: [DateTime]
  anzsco_code_lte: String
  created_at: DateTime
  days_exists: Boolean
  comment_lte: String
  stream_ne: String
  outcome_exists: Boolean
  received_on_ne: DateTime
  stream_lt: String
  location_exists: Boolean
  received_on_exists: Boolean
  _id_exists: Boolean
  received_on: DateTime
  anzsco_code_gte: String
  submitted_on_lt: DateTime
  OR: [ApplicationQueryInput!]
  _id_lt: ObjectId
  days_lt: Int
  stream: String
  created_at_lte: DateTime
  anzsco_code_gt: String
  stream_gte: String
  created_at_gt: DateTime
  created_at_in: [DateTime]
  comment_gt: String
  _id_lte: ObjectId
  days_nin: [Int]
  submitted_on_gt: DateTime
  created_at_gte: DateTime
  anzsco_code: String
  submitted_on_gte: DateTime
  anzsco_code_ne: String
  received_on_gte: DateTime
  received_on_lt: DateTime
  anzsco_code_in: [String]
  created_at_lt: DateTime
  received_on_in: [DateTime]
  submitted_on_nin: [DateTime]
  location_lt: String
  days: Int
  comment_exists: Boolean
  location: String
  comment_gte: String
  submitted_on: DateTime
  AND: [ApplicationQueryInput!]
  location_nin: [String]
  days_gt: Int
  received_on_lte: DateTime
  days_gte: Int
  anzsco_code_nin: [String]
  comment_ne: String
  stream_nin: [String]
  comment_nin: [String]
  days_lte: Int
  submitted_on_in: [DateTime]
  location_in: [String]
  outcome_ne: Boolean
  _id_gt: ObjectId
  location_gt: String
  _id_nin: [ObjectId]
  location_ne: String
  _id_gte: ObjectId
  received_on_nin: [DateTime]
  _id_ne: ObjectId
  anzsco_code_exists: Boolean
  stream_lte: String
  submitted_on_lte: DateTime
  created_at_ne: DateTime
  stream_exists: Boolean
  created_at_exists: Boolean
  received_on_gt: DateTime
  days_ne: Int
  comment: String
  stream_in: [String]
  stream_gt: String
  outcome: Boolean
  comment_lt: String
}

scalar DateTime

type Query {
  application(query: ApplicationQueryInput): Application
  applications(query: ApplicationQueryInput, limit: Int = 100, sortBy: ApplicationSortByInput): [Application]!
}

type DeleteManyPayload {
  deletedCount: Int!
}

type InsertManyPayload {
  insertedIds: [ObjectId]!
}